"""defines devices, entity types, supported entities per device and per version"""

COMFORT_SUPPORTED_ENTITIES = {
    "get_display_led_1_state": "binary_sensor",
    "get_display_led_2_state": "binary_sensor",
    "get_t8_outdoor_temperature": "sensor",
    "get_t3_exhaust_temperature": "sensor",
    "get_t4_outlet": "sensor",
    "get_display_text_1": "sensor",
    "get_display_text_2": "sensor",
}

VP18C_SUPPORTED_ENTITIES = {
    "get_air_exchange_mode": "climate",
    "get_electric_water_heater_setpoint": "water_heater",
    "get_electric_water_heater_state": "water_heater",
    "get_compressor_water_heater_setpoint": "water_heater",
    "get_t12_compressor_water_heater_temperature": "water_heater",
    "get_t11_electric_water_heater_temperature": "water_heater",
    "get_legionella_day": "select",
    "get_hmi_language": "select",
    "get_compressor_priority": "select",
    "get_min_supply_step": "select",
    "get_min_return_step": "select",
    "get_max_return_step": "select",
    "get_low_outdoor_temperature_ventilation_step": "select",
    "get_defrost_ventilation_level": "select",
    "get_air_filter_alarm_interval": "select",
    "get_scalding_protection_setpoint": "number",
    "get_max_supply_air_summer_setpoint": "number",
    "get_max_supply_air_winter_setpoint": "number",
    "get_supply_power_at_level_1": "number",
    "get_supply_power_at_level_2": "number",
    "get_supply_power_at_level_3": "number",
    "get_supply_power_at_level_4": "number",
    "get_return_power_at_level_1": "number",
    "get_return_power_at_level_2": "number",
    "get_return_power_at_level_3": "number",
    "get_return_power_at_level_4": "number",
    "get_fan_startup_delay": "number",
    "get_compressor_stop_time": "number",
    "get_defrost_start_setpoint": "number",
    "get_defrost_stop_setpoint": "number",
    "get_defrost_time": "number",
    "get_low_temperature_compressor_start_setpoint": "number",
    "get_low_outdoor_temperature_setpoint": "number",
    "get_low_room_temperature_setpoint": "number",
    "get_low_temperature_curve": "number",
    "get_high_temperature_curve": "number",
    "get_average_humidity": "sensor",
    "get_supply_fan_level": "sensor",
    "get_return_fan_level": "sensor",
    "get_t10_external_temperature": "sensor",
    "get_t6_evaporator_temperature": "sensor",
    "get_t5_condenser_temperature": "sensor",
    "get_t1_intake_temperature": "sensor",
    "get_ventilation_state": "sensor",
    "get_days_since_air_filter_change": "sensor",
    "get_days_to_air_filter_change": "sensor",
    "get_compressor_state": "binary_sensor",
    "get_defrost_state": "binary_sensor",
    "get_air_heat_select": "select",
    "get_air_quality_control_type": "select",
}

VP18M2_SUPPORTED_ENTITIES = {
    "get_air_exchange_mode": "climate",
    "get_electric_water_heater_setpoint": "water_heater",
    "get_electric_water_heater_state": "water_heater",
    "get_compressor_water_heater_setpoint": "water_heater",
    "get_t12_compressor_water_heater_temperature": "water_heater",
    "get_t11_electric_water_heater_temperature": "water_heater",
    "get_display_led_1_state": "binary_sensor",
    "get_display_led_2_state": "binary_sensor",
    "get_compressor_state": "binary_sensor",
    "get_display_text_1": "sensor",
    "get_display_text_2": "sensor",
    "get_t10_external_temperature": "sensor",
    "get_t6_evaporator_temperature": "sensor",
    "get_t5_condenser_temperature": "sensor",
    "get_t1_intake_temperature": "sensor",
    "get_t13_return_temperature": "sensor",
    "get_t14_supply_temperature": "sensor",
    "get_t16_sacrificial_anode_temperature": "sensor",
    "get_anode_state": "sensor",
}

COMBI302_SUPPORTED_ENTITIES = {
    "get_hmi_language": "select",
    "get_min_supply_step": "select",
    "get_min_return_step": "select",
    "get_max_return_step": "select",
    "get_low_outdoor_temperature_ventilation_step": "select",
    "get_air_heat_select": "select",
    "get_pre_heater_deftrost_select": "select",
    "get_pre_heater_temp_set": "select",
    "get_air_quality_control_type": "select",
    "get_air_filter_alarm_interval": "select",
    "get_supply_power_at_level_1": "number",
    "get_supply_power_at_level_2": "number",
    "get_supply_power_at_level_3": "number",
    "get_supply_power_at_level_4": "number",
    "get_return_power_at_level_1": "number",
    "get_return_power_at_level_2": "number",
    "get_return_power_at_level_3": "number",
    "get_return_power_at_level_4": "number",
    "get_maximum_compressor_defrost_time": "number",
    "get_maximum_outlet_defrost_time": "number",
    "get_time_between_defrost": "number",
    "get_compressor_stop_time": "number",
    "get_defrost_start_setpoint": "number",
    "get_defrost_stop_setpoint": "number",
    "get_low_temperature_compressor_start_setpoint": "number",
    "get_low_outdoor_temperature_setpoint": "number",
    "get_low_room_temperature_setpoint": "number",
    "get_average_humidity": "sensor",
    "get_supply_fan_level": "sensor",
    "get_return_fan_level": "sensor",
    "get_t10_external_temperature": "sensor",
    "get_t6_evaporator_temperature": "sensor",
    "get_t5_condenser_temperature": "sensor",
    "get_t1_intake_temperature": "sensor",
    "get_ventilation_state": "sensor",
    "get_days_since_air_filter_change": "sensor",
    "get_days_to_air_filter_change": "sensor",
    "get_compressor_state": "binary_sensor",
    "get_defrost_state": "binary_sensor",
    "get_bypass_flap_state": "binary_sensor",
}

COMMON_ENTITIES = {
    "get_run_state": "climate",
    "get_ventilation_step": "climate",
    "get_operation_mode": "climate",
    "get_user_humidity_setpoint": "climate",
    "get_user_temperature_setpoint": "climate",
    "get_control_temperature": "climate",
    "get_bus_version": "sensor",
    "get_control_state": "sensor",
    "get_humidity": "sensor",
    "get_t7_inlet_temperature_after_heater": "sensor",
    "get_t15_user_panel_temperature": "sensor",
    "get_t0_controller_temperature": "sensor",
    "get_alarm_count": "sensor",
    "get_time_in_control_state": "sensor",
    "get_summer_state": "sensor",
    "get_time": "sensor",
    "get_return_fan_speed": "sensor",
    "get_supply_fan_speed": "sensor",
    "get_smoke_alarm_state": "binary_sensor",
    "get_cooling_mode_ventilation_step": "select",
    "get_cooling_setpoint": "select",
    "get_low_humidity_step": "select",
    "get_high_humidity_step": "select",
    "alarm_reset": "select",
    "get_max_high_humidity_vent_time": "number",
    "get_min_supply_air_summer_setpoint": "number",
    "get_min_supply_air_winter_setpoint": "number",
    "get_summer_state_change_setpoint": "number",
    "get_user_function_1_state": "binary_sensor",
    "get_user_function_2_state": "binary_sensor",
}

HW_VERSION_TO_DEVICE = {
    13: COMFORT_SUPPORTED_ENTITIES,
    19: VP18C_SUPPORTED_ENTITIES,
    21: VP18M2_SUPPORTED_ENTITIES,
    35: COMBI302_SUPPORTED_ENTITIES,
}

DEVICE_TYPES = {
    13: "COMFORT",
    19: "VP 18c",
    21: "VP 18cek",
    35: "COMBI 302",
}

CO2_PRESENT_TO_ATTRIBUTES = {
    "get_co2_sensor_value": "sensor",
    "get_co2_ventilation_high_step": "select",
    "get_co2_low_limit_setpoint": "number",
    "get_co2_high_limit_setpoint": "number",
}

ELECTRIC_AFTER_HEATER_PRESENT_TO_ATTRIBUTES = {
    "get_after_heating_type": "sensor",
    "get_after_heating_element_capacity": "sensor",
    "get_central_heat_select": "select",
    "get_supply_heating_pid_time": "number",
    "get_central_heat_supply_curve_offset": "number",
    "get_central_heat_supply_curve": "number",
    "get_min_supply_air_temperature": "number",
    "get_max_supply_air_temperature": "number",
    "get_supply_heater_delay": "number",
    "get_supply_air_after_heating": "switch",
}

ELECTRIC_RELAY_AFTER_HEATER_PRESENT_TO_ATTRIBUTES = {}

WATER_AFTER_HEATER_PRESENT_TO_ATTRIBUTES = {}

ENTITY_MAP = {
    "get_bus_version": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_controller_software_version": {
        "entity_type": "config",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_controller_hardware_version": {
        "entity_type": "config",
        "min_bus_version": 21,
        "supported_devices": ("all",),
    },
    "get_user_function_1_state": {
        "entity_type": "sensor",
        "min_bus_version": 2,
        "supported_devices": ("all",),
    },
    "get_smoke_alarm_state": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_user_function_2_state": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_t0_controller_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_t1_intake_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (
            19,
            21,
            35,
        ),
    },
    "get_t2_inlet_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (None,),
    },
    "get_t3_exhaust_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (13,),
    },
    "get_t4_outlet": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (13,),
    },
    "get_t5_condenser_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (
            19,
            21,
            35,
        ),
    },
    "get_t6_evaporator_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (
            19,
            21,
            35,
        ),
    },
    "get_t7_inlet_temperature_after_heater": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": ("all",),
    },
    "get_t8_outdoor_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (13,),
    },
    "get_t9_heater_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (None,),
    },
    "get_t10_external_temperature": {
        "entity_type": "sensor",
        "min_bus_version": 1,
        "supported_devices": (19, 21, 35),
    },
}
